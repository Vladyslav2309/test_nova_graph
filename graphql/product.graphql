type Product {
    id: ID
    slug: String
    name: String
    description: String
    price: Float
    sku: String
    quantity: Int
    is_published: Boolean
    brand: Brand
}

type ProductsList {
    data: [Product]
    paginatorInfo: PaginatorInfo
}

input ProductInput {
    id: ID @rules(apply: ["required", "exists:products,id"])
}

input AllProductsInput {
    search: String @rules(apply: ["nullable", "string", "max:255"])
    first: Int @rules(apply: ["required", "min:1"])
    page: Int @rules(apply: ["required", "int", "min:1"])
    sort: String @rules(apply: ["nullable", "string", "max:255"])
    order: String @rules(apply: ["nullable", "string", "in:asc,desc"])
}

extend type Query {
    "View single Product."
    product(input: ProductInput! @spread): Product

    "View all Products with pagination."
    allProducts(input: AllProductsInput! @spread): ProductsList!
}
